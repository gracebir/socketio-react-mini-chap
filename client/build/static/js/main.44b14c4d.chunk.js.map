{"version":3,"sources":["Chat.js","App.js","index.js"],"names":["Chat","socket","username","room","useState","currentMessage","setCurrentMessage","messageList","setMessageList","sendMessage","a","messageData","author","message","time","Date","now","getHours","getMinutes","emit","console","log","list","useEffect","on","data","className","map","i","id","onChange","e","target","value","type","onKeyPress","event","key","placeholder","onClick","io","connect","App","setUsername","setRoom","showChat","setShowChat","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPAsEeA,MAlEf,YAAyC,IAA1BC,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,SAAUC,EAAO,EAAPA,KAAO,EACQC,mBAAS,IADjB,mBAC7BC,EAD6B,KACbC,EADa,OAEEF,mBAAS,IAFX,mBAE7BG,EAF6B,KAEhBC,EAFgB,KAK9BC,EAAW,uCAAG,4BAAAC,EAAA,yDACM,KAAnBL,EADa,uBAENM,EAAc,CAChBR,OACAS,OAAQV,EACRW,QAAUR,EACVS,KAAM,IAAIC,KAAKA,KAAKC,OAAOC,WAC3B,IACA,IAAIF,KAAKA,KAAKC,OAAOE,cARb,SAUNjB,EAAOkB,KAAK,eAAgBR,GAVtB,OAWZS,QAAQC,IAAI,cACZb,GAAe,SAACc,GAAD,4BAAaA,GAAb,CAAmBX,OAClCL,EAAkB,KAbN,2CAAH,qDAyBjB,OAPAiB,qBAAU,WACNtB,EAAOuB,GAAG,mBAAkB,SAACC,GACzBL,QAAQC,IAAII,GACZjB,GAAe,SAACc,GAAD,4BAAaA,GAAb,CAAmBG,YAExC,CAACxB,IAGC,sBAAKyB,UAAU,cAAf,UACI,qBAAKA,UAAU,cAAf,SACI,4CAEJ,qBAAKA,UAAU,YAAf,SACI,cAAC,IAAD,CAAgBA,UAAU,oBAA1B,SACCnB,EAAYoB,KAAI,WAAyBC,GAAK,IAA5Bf,EAA2B,EAA3BA,QAAQC,EAAmB,EAAnBA,KAAMF,EAAa,EAAbA,OAC7B,OAAO,qBAAKc,UAAU,UAAUG,GAAI3B,IAAaU,EAAS,MAAQ,QAA3D,SACH,gCACI,qBAAKc,UAAU,kBAAf,SACI,4BAAIb,MAER,sBAAKa,UAAU,eAAf,UACI,mBAAGG,GAAG,OAAN,SAAcf,IACd,mBAAGe,GAAG,SAAN,SAAgBjB,WAPoDgB,UAcxF,sBAAKF,UAAU,cAAf,UACI,uBACAI,SAAU,SAACC,GAAD,OAAMzB,EAAkByB,EAAEC,OAAOC,QAC3CC,KAAK,OACLC,WAAY,SAACC,GACK,UAAdA,EAAMC,KAAmB5B,KAE7B6B,YAAY,WACZ,wBAAQC,QAAS9B,EAAjB,2BC1DVR,EAASuC,IAAGC,QAAQ,yBA2CXC,MAzCf,WAAgB,IAAD,EACmBtC,mBAAS,IAD5B,mBACNF,EADM,KACIyC,EADJ,OAEWvC,mBAAS,IAFpB,mBAEND,EAFM,KAEAyC,EAFA,OAGmBxC,oBAAS,GAH5B,mBAGNyC,EAHM,KAGIC,EAHJ,KAYb,OACE,qBAAKpB,UAAU,MAAf,SACImB,EAoBA,cAAC,EAAD,CAAM5C,OAAQA,EAAQC,SAAUA,EAAUC,KAAMA,IAnBhD,sBAAKuB,UAAU,oBAAf,UACE,6CACA,uBACEQ,KAAK,OACLI,YAAY,UACZR,SAAU,SAACM,GACTO,EAAYP,EAAMJ,OAAOC,UAG7B,uBACEC,KAAK,OACLI,YAAY,aACZR,SAAU,SAACM,GACTQ,EAAQR,EAAMJ,OAAOC,UAGzB,wBAAQM,QA1BC,WACE,KAAbrC,GAA4B,KAATC,IACrBF,EAAOkB,KAAK,YAAahB,GACzB2C,GAAY,KAuBR,+BClCVC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.44b14c4d.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport ScrollToBottom from 'react-scroll-to-bottom';\n\n\nfunction Chat({socket, username, room}) {\n    const [currentMessage, setCurrentMessage] = useState(\"\");\n    const [messageList, setMessageList] = useState([]);\n\n\n    const sendMessage = async() =>{\n        if(currentMessage !== \"\"){\n            const messageData = {\n                room,\n                author: username,\n                message : currentMessage,\n                time: new Date(Date.now()).getHours()+\n                \":\"+\n                new Date(Date.now()).getMinutes()\n            }\n            await socket.emit(\"send_message\", messageData);\n            console.log(\"message it\")\n            setMessageList((list)=> [...list, messageData])\n            setCurrentMessage(\" \");\n        }\n    }\n\n \n    useEffect(()=>{\n        socket.on(\"receive_message\",(data)=>{\n            console.log(data)\n            setMessageList((list)=> [...list, data])\n        })\n    },[socket])\n\n    return (\n        <div className='chat-window'>\n            <div className=\"chat-header\">\n                <p>Live chat</p>\n            </div>\n            <div className=\"chat-body\">\n                <ScrollToBottom className=\"message-container\">\n                {messageList.map(({message,time, author}, i)=>{\n                    return <div className='message' id={username === author ? \"you\" : \"other\"} key={i}>\n                        <div>\n                            <div className='message-content'>\n                                <p>{message}</p>\n                            </div>\n                            <div className=\"message-meta\">\n                                <p id=\"time\">{time}</p>\n                                <p id='author'>{author}</p>\n                            </div>\n                        </div>\n                    </div>\n                })}\n                </ScrollToBottom>\n            </div>\n            <div className=\"chat-footer\">\n                <input \n                onChange={(e)=> setCurrentMessage(e.target.value)}\n                type=\"text\" \n                onKeyPress={(event) => {\n                    event.key === \"Enter\" && sendMessage();\n                  }}\n                placeholder='hey...' />\n                <button onClick={sendMessage}>&#9658;</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Chat\n","import './App.css';\nimport io from 'socket.io-client';\nimport { useState } from 'react';\nimport Chat from './Chat';\n\n//https://www.youtube.com/watch?v=NU-HfZY3ATQ&t=883s\nconst socket = io.connect(\"http://localhost:3001\")\n\nfunction App() {\n  const [username, setUsername] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n  const [showChat, setShowChat] = useState(false);\n\n  const joinRoom = () => {\n    if (username !== \"\" && room !== \"\") {\n      socket.emit(\"join_room\", room);\n      setShowChat(true);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      {!showChat ? (\n        <div className=\"joinChatContainer\">\n          <h3>Join A Chat</h3>\n          <input\n            type=\"text\"\n            placeholder=\"John...\"\n            onChange={(event) => {\n              setUsername(event.target.value);\n            }}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Room ID...\"\n            onChange={(event) => {\n              setRoom(event.target.value);\n            }}\n          />\n          <button onClick={joinRoom}>Join A Room</button>\n        </div>\n      ) : (\n        <Chat socket={socket} username={username} room={room} />\n      )}\n    \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}